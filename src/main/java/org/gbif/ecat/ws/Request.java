/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.gbif.ecat.ws;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Request extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Request\",\"namespace\":\"org.gbif.ecat.ws\",\"fields\":[{\"name\":\"kingdom\",\"type\":[\"string\",\"null\"]},{\"name\":\"phylum\",\"type\":[\"string\",\"null\"]},{\"name\":\"class\",\"type\":[\"string\",\"null\"]},{\"name\":\"order\",\"type\":[\"string\",\"null\"]},{\"name\":\"family\",\"type\":[\"string\",\"null\"]},{\"name\":\"genus\",\"type\":[\"string\",\"null\"]},{\"name\":\"name\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence kingdom;
  @Deprecated public java.lang.CharSequence phylum;
  @Deprecated public java.lang.CharSequence class$;
  @Deprecated public java.lang.CharSequence order;
  @Deprecated public java.lang.CharSequence family;
  @Deprecated public java.lang.CharSequence genus;
  @Deprecated public java.lang.CharSequence name;

  /**
   * Default constructor.
   */
  public Request() {}

  /**
   * All-args constructor.
   */
  public Request(java.lang.CharSequence kingdom, java.lang.CharSequence phylum, java.lang.CharSequence class$, java.lang.CharSequence order, java.lang.CharSequence family, java.lang.CharSequence genus, java.lang.CharSequence name) {
    this.kingdom = kingdom;
    this.phylum = phylum;
    this.class$ = class$;
    this.order = order;
    this.family = family;
    this.genus = genus;
    this.name = name;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return kingdom;
    case 1: return phylum;
    case 2: return class$;
    case 3: return order;
    case 4: return family;
    case 5: return genus;
    case 6: return name;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: kingdom = (java.lang.CharSequence)value$; break;
    case 1: phylum = (java.lang.CharSequence)value$; break;
    case 2: class$ = (java.lang.CharSequence)value$; break;
    case 3: order = (java.lang.CharSequence)value$; break;
    case 4: family = (java.lang.CharSequence)value$; break;
    case 5: genus = (java.lang.CharSequence)value$; break;
    case 6: name = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'kingdom' field.
   */
  public java.lang.CharSequence getKingdom() {
    return kingdom;
  }

  /**
   * Sets the value of the 'kingdom' field.
   * @param value the value to set.
   */
  public void setKingdom(java.lang.CharSequence value) {
    this.kingdom = value;
  }

  /**
   * Gets the value of the 'phylum' field.
   */
  public java.lang.CharSequence getPhylum() {
    return phylum;
  }

  /**
   * Sets the value of the 'phylum' field.
   * @param value the value to set.
   */
  public void setPhylum(java.lang.CharSequence value) {
    this.phylum = value;
  }

  /**
   * Gets the value of the 'class$' field.
   */
  public java.lang.CharSequence getClass$() {
    return class$;
  }

  /**
   * Sets the value of the 'class$' field.
   * @param value the value to set.
   */
  public void setClass$(java.lang.CharSequence value) {
    this.class$ = value;
  }

  /**
   * Gets the value of the 'order' field.
   */
  public java.lang.CharSequence getOrder() {
    return order;
  }

  /**
   * Sets the value of the 'order' field.
   * @param value the value to set.
   */
  public void setOrder(java.lang.CharSequence value) {
    this.order = value;
  }

  /**
   * Gets the value of the 'family' field.
   */
  public java.lang.CharSequence getFamily() {
    return family;
  }

  /**
   * Sets the value of the 'family' field.
   * @param value the value to set.
   */
  public void setFamily(java.lang.CharSequence value) {
    this.family = value;
  }

  /**
   * Gets the value of the 'genus' field.
   */
  public java.lang.CharSequence getGenus() {
    return genus;
  }

  /**
   * Sets the value of the 'genus' field.
   * @param value the value to set.
   */
  public void setGenus(java.lang.CharSequence value) {
    this.genus = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /** Creates a new Request RecordBuilder */
  public static org.gbif.ecat.ws.Request.Builder newBuilder() {
    return new org.gbif.ecat.ws.Request.Builder();
  }
  
  /** Creates a new Request RecordBuilder by copying an existing Builder */
  public static org.gbif.ecat.ws.Request.Builder newBuilder(org.gbif.ecat.ws.Request.Builder other) {
    return new org.gbif.ecat.ws.Request.Builder(other);
  }
  
  /** Creates a new Request RecordBuilder by copying an existing Request instance */
  public static org.gbif.ecat.ws.Request.Builder newBuilder(org.gbif.ecat.ws.Request other) {
    return new org.gbif.ecat.ws.Request.Builder(other);
  }
  
  /**
   * RecordBuilder for Request instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Request>
    implements org.apache.avro.data.RecordBuilder<Request> {

    private java.lang.CharSequence kingdom;
    private java.lang.CharSequence phylum;
    private java.lang.CharSequence class$;
    private java.lang.CharSequence order;
    private java.lang.CharSequence family;
    private java.lang.CharSequence genus;
    private java.lang.CharSequence name;

    /** Creates a new Builder */
    private Builder() {
      super(org.gbif.ecat.ws.Request.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.gbif.ecat.ws.Request.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Request instance */
    private Builder(org.gbif.ecat.ws.Request other) {
            super(org.gbif.ecat.ws.Request.SCHEMA$);
      if (isValidValue(fields()[0], other.kingdom)) {
        this.kingdom = data().deepCopy(fields()[0].schema(), other.kingdom);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.phylum)) {
        this.phylum = data().deepCopy(fields()[1].schema(), other.phylum);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.class$)) {
        this.class$ = data().deepCopy(fields()[2].schema(), other.class$);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.order)) {
        this.order = data().deepCopy(fields()[3].schema(), other.order);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.family)) {
        this.family = data().deepCopy(fields()[4].schema(), other.family);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.genus)) {
        this.genus = data().deepCopy(fields()[5].schema(), other.genus);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.name)) {
        this.name = data().deepCopy(fields()[6].schema(), other.name);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'kingdom' field */
    public java.lang.CharSequence getKingdom() {
      return kingdom;
    }
    
    /** Sets the value of the 'kingdom' field */
    public org.gbif.ecat.ws.Request.Builder setKingdom(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.kingdom = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'kingdom' field has been set */
    public boolean hasKingdom() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'kingdom' field */
    public org.gbif.ecat.ws.Request.Builder clearKingdom() {
      kingdom = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'phylum' field */
    public java.lang.CharSequence getPhylum() {
      return phylum;
    }
    
    /** Sets the value of the 'phylum' field */
    public org.gbif.ecat.ws.Request.Builder setPhylum(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.phylum = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'phylum' field has been set */
    public boolean hasPhylum() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'phylum' field */
    public org.gbif.ecat.ws.Request.Builder clearPhylum() {
      phylum = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'class$' field */
    public java.lang.CharSequence getClass$() {
      return class$;
    }
    
    /** Sets the value of the 'class$' field */
    public org.gbif.ecat.ws.Request.Builder setClass$(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.class$ = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'class$' field has been set */
    public boolean hasClass$() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'class$' field */
    public org.gbif.ecat.ws.Request.Builder clearClass$() {
      class$ = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'order' field */
    public java.lang.CharSequence getOrder() {
      return order;
    }
    
    /** Sets the value of the 'order' field */
    public org.gbif.ecat.ws.Request.Builder setOrder(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.order = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'order' field has been set */
    public boolean hasOrder() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'order' field */
    public org.gbif.ecat.ws.Request.Builder clearOrder() {
      order = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'family' field */
    public java.lang.CharSequence getFamily() {
      return family;
    }
    
    /** Sets the value of the 'family' field */
    public org.gbif.ecat.ws.Request.Builder setFamily(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.family = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'family' field has been set */
    public boolean hasFamily() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'family' field */
    public org.gbif.ecat.ws.Request.Builder clearFamily() {
      family = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'genus' field */
    public java.lang.CharSequence getGenus() {
      return genus;
    }
    
    /** Sets the value of the 'genus' field */
    public org.gbif.ecat.ws.Request.Builder setGenus(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.genus = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'genus' field has been set */
    public boolean hasGenus() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'genus' field */
    public org.gbif.ecat.ws.Request.Builder clearGenus() {
      genus = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public org.gbif.ecat.ws.Request.Builder setName(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.name = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'name' field */
    public org.gbif.ecat.ws.Request.Builder clearName() {
      name = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public Request build() {
      try {
        Request record = new Request();
        record.kingdom = fieldSetFlags()[0] ? this.kingdom : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.phylum = fieldSetFlags()[1] ? this.phylum : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.class$ = fieldSetFlags()[2] ? this.class$ : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.order = fieldSetFlags()[3] ? this.order : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.family = fieldSetFlags()[4] ? this.family : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.genus = fieldSetFlags()[5] ? this.genus : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.name = fieldSetFlags()[6] ? this.name : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
